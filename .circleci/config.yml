# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: chartsockcfa/hipaa-sample-ci:initial
      environment:
        PGHOST: 127.0.0.1
        PGUSER: root
        RAILS_ENV: test
        RACK_ENV: test

    - image: circleci/postgres:9.6.2-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: circle-test_test

version: 2
jobs:
  run_checks:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-

      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run: bundle exec bundle-audit update && bundle exec bundle-audit check

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

  deploy-staging:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-

      - run:
          name: deploy staging
          command: eb deploy hipaa-sample-staging


  tag-as-promoted:
    <<: *defaults
    steps:
      - checkout

      - run:
          name: tag as promoted
          command: git tag workflow-$CIRCLE_WORKFLOW_ID; git push --tags

  deploy-demo:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-

      - run:
          name: deploy demo
          command: eb deploy hipaa-sample-demo

  deploy-production:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-

      - run:
          name: deploy production
          command: eb deploy hipaa-sample-production

workflows:
  version: 2
  build:
    jobs:
      - run_checks
      - deploy-staging:
          filters:
            branches:
              only:
                - master
          requires:
            - run_checks
      - approve-for-production:
          type: approval
          requires:
            - deploy-staging
      - tag-as-promoted:
          requires:
            - approve-for-production
      - deploy-demo:
          requires:
            - tag-as-promoted
      - deploy-production:
          requires:
            - tag-as-promoted
