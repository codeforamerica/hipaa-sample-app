# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/ruby:2.5.1-browsers

version: 2
jobs:
  deploy-staging:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: install eb cli
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python-pip python-dev build-essential
            sudo pip install awsebcli --upgrade

      - run:
          name: deploy staging
          command: eb deploy hipaa-sample-staging


  tag-as-promoted:
    <<: *defaults
    steps:
      - checkout

      - run:
          name: tag as promoted
          command: git tag v-$CIRCLE_BUILD_NUM; git push --tags

  deploy-demo:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: install eb cli
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python-pip python-dev build-essential
            sudo pip install awsebcli --upgrade

      - run:
          name: deploy demo
          command: eb deploy hipaa-sample-demo

workflows:
  version: 2
  build:
    jobs:
      - deploy-staging:
          filters:
            branches:
              only:
                - master
      - promote-to-demo:
          type: approval
          requires:
            - deploy-staging
      - tag-as-promoted:
          requires:
            - promote-to-demo
      - deploy-demo:
          requires:
            - tag-as-promoted
